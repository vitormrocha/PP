EX 1: #include <stdio.h> 
/* Faça um programa que possua um vetor denominado A que armazene 6 números inteiros. 
O programa deve executar os seguintes passos:
a) Atribua os seguintes valores a esse vetor: 1, 0, 5, -2, -5, 7.
b) Armazene em uma variável inteira (simples) a soma entre os valores das posições 
A[0], A[1] e A[5] do vetor e mostre na tela esta soma.
c) Modifique o vetor na posição 4, atribuindo a esta posição o valor 100.
d) Mostre na tela cada valor do vetor A, um em cada linha*/

int main () {
    int vetor[6]= {1,0,5,-2,-5,7}; 
    int soma= vetor[0] + vetor[1] + vetor[5];
    int i; 
    printf ("A soma das posicoes A0, A1 e A5 de um vetor e igual a: %d", soma); 
    vetor[4]=100; 
    for (i=0; i<6; i++) {
        printf("\n%d", vetor[i]); 
    }
    return 0;

}

Ex 2: #include <stdio.h>
/* Faça um programa que leia um vetor de 8 posições e, em seguida, leia também dois valores
X e Y quaisquer correspondentes a duas posições no vetor. Ao final seu programa deverá
escrever a soma dos valores encontrados nas respectivas posições X e Y.

*/

int main () {
    int i, vetor[8], X, Y;
    for (i=0; i<8; i++) {
        printf ("Apresente um valor para a posicao %d: \n", i);
        scanf ("%d", &vetor[i]);
    }
    printf ("Escolha uma das posicoes do vetor: ");
    scanf ("%d", &X);
    printf ("Escolha outra posicao: ");
    scanf ("%d", &Y);
    printf("A soma dos valores dessa posicao eh: %d", vetor[X] + vetor[Y]);


return 0;
}




Ex 3: #include <stdio.h>
/* Crie um programa que lê 6 valores inteiros e, em seguida, mostre na tela os valores lidos na
ordem inversa */

int main () {
    int i, vetor[6];
    for (i=0; i<6; i++) {
        printf ("Apresente um valor: ");
        scanf ("%d", &vetor[i]);
    }
    printf("\nA ordem inversa desses numeros eh: \n");
    for (i=5; i>=0; i--) {
    printf ("\n%d", vetor[i]);
    }

return 0;
}

Ex 4: #include <stdio.h>
/* Fazer um programa para ler 5 valores e, em seguida, mostrar a posição onde se encontram
o maior e o menor valor.

*/

int main () {
    int i, vetor[5], maior=vetor[0], menor, PosicaoMaior, PosicaoMenor=0;
    for (i=0; i<5; i++) {
        printf ("Apresente um valor para a posicao %d de um vetor: \n", i);
        scanf ("%d", &vetor[i]);
    }
    for (i=0; i<5; i++) {
        if (maior< vetor[i]) {
            maior=vetor[i];
            PosicaoMaior=i;
        }
    }
    menor= vetor[0];
    for (i=1; i<5; i++) {
        if (menor>vetor[i]) {
            menor= vetor[i];
            PosicaoMenor=i;
        }
    }


    for (i=0; i<5; i++) {
        printf ("\n%d", vetor[i]);
    }
    printf ("\nO maior valor eh: %d\nA posicao eh: %d", maior, PosicaoMaior);
    printf("\nO menor valor eh: %d\nA posicao eh: %d", menor, PosicaoMenor);


return 0;
}

Ex 5: #include <stdio.h> 
/* Faça um vetor de tamanho 50 preenchido com o seguinte valor: (i+5*i)%(i+1), sendo i 
a posição do elemento no vetor. Em seguida imprima o vetor na tela.
*/

int main () {
    int vetor[50], i; 
    for (i=0; i<50; i++) {
        vetor[i]=(i+5*i)%(i+1); 
    }
    for (i=0; i<50; i++) {
    printf("\n%d", vetor[i]); 
    }
    return 0;

}

Ex 6: #include <stdio.h> 

/*
Leia 10 números inteiros e armazene em um vetor. Em seguida escreva os elementos que 
são primos e suas respectivas posições no vetor.

*/

int main (){
    int i, j, valor;
    int vetor[10];

        for (i=0;i<10; i++){
        printf("Apresente um numero inteiro para a posicao (%d) de um vetor:", i);
        scanf("%d", &vetor[i]);
        printf("\n"); 
        }
        
		

        for (i = 0; i < 10; i++){
    

            for (j = 2; j < vetor[i]; j++){
                if(vetor[i] % j == 0){
                    valor++;
                }
            }

            if (valor == 0)
            printf("O numero %d eh primo, na posicao %d\n", vetor[i], i);

        }
    


    return 0;
}

Ex 7: #include <stdio.h> 
/*
Faça um programa que receba 6 números inteiros e mostre:
? Os números pares digitados;
? A soma dos números pares digitados;
? Os números ímpares digitados;
? A quantidade de números ímpares digitados
*/



int main () {
    int vetor[6], i, soma_par, impar; 
    for (i=0; i<6; i++) {
        printf ("Apresente um numero: ");
        scanf("%d", &vetor[i]); 
        if (vetor[i]%2==0) {
            soma_par= i + i; 
        } 
        if (vetor[i]% 2 != 0) {
            impar++;  
        }
    }
    printf("\nA soma dos numeros pares guardados nesse vetor e igual a: %d", soma_par); 
    printf("\nA quantidade de numeros impares digitados foi: %d", impar); 
    return 0;

}

Ex 8: #include <stdio.h> 
/*
Faça um programa para ler 10 números DIFERENTES a serem armazenados em um vetor. Os 
dados deverão ser armazenados no vetor na ordem que forem sendo lidos, sendo que caso 
o usuário digite um número que já foi digitado anteriormente, o programa deverá pedir para 
ele digitar outro número. Note que cada valor digitado pelo usuário deve ser pesquisado no 
vetor, verificando se ele existe entre os números que já foram fornecidos. Exibir na tela o 
vetor final que foi digitado
*/



int main () {
    int vetor[10], i,verf; 
    for (i=0; i<10; i++) {
        printf ("Apresente um numero: ");
        scanf("%d", &vetor[i]); 
      for (verf=0; verf<i; verf++) {
        if(vetor[i]==vetor[verf]) {
            printf("\nNumero repetido. ");
            i--; 
        }


      }
    }   
    printf ("\nO vetor apresentado foi: "); 
        for (i=0; i<10; i++) {
            printf("\n%d", vetor[i]); 
        }

    return 0;

}

EXERCICIOS MATRIZES - - - - - - - - - - - - - - - -  -

Ex 1: #include <stdio.h> 
/*
Leia uma matriz 4 × 4, conte e escreva quantos valores maiores que 10 ele possui
*/



int main () {
    int matriz[4][4], i, j, verf; 
    for (i=0;i<4;i++) {
        for (j=0;j<4;j++) {
            printf ("Apresente um valor: "); 
            scanf("%d", &matriz[i][j]); 
            if (matriz[i][j] > 10) {
                verf++;
            }
        }
    }
    printf("\nEssa matriz possui %d numeros que sao maiores do que 10.", verf); 

    return 0;

}

Ex 2: #include <stdio.h> 
/*
Declare uma matriz 5 × 5. Preencha com 1 a diagonal principal e com 0 os demais elementos. 
Escreva ao final a matriz obtida.
*/



int main () {
    int matriz[5][5], i,j; 
    for (i=0; i<5; i++) {
            for (j=0; j<5; j++) {
                if (i==j) {
                    matriz[i][j]=1;
                } else {
                    matriz[i][j]=0; 
                }
            }


    }
    for(i=0;i<5;i++) {
        for (j=0;j<5;j++) {
            printf("%d", matriz[i][j]); 
        }
        printf("\n"); 
    }
    return 0;

}

Ex 3: #include <stdio.h> 
/*
Leia uma matriz 4 × 4, imprima a matriz e retorne a localização (linha e a coluna) do maior 
valor
*/



int main () {
    int matriz[4][4], i,j, maior=0, PosI, PosJ; 
    for (i=0; i<4; i++) {
        for(j=0;j<4;j++) {
            printf("Digite o valor de uma matriz. MATRIZ[%d][%d]: ", i, j);
            scanf("%d", &matriz[i][j]); 
            if (maior<matriz[i][j]) {
                maior=matriz[i][j];
                PosI=i;
                PosJ=j;
            }
        } printf("\n");
    }
    for (i=0;i<4;i++) {
        for (j=0;j<4;j++) {
            printf("\n%d", matriz[i][j]);
        }
    } printf("\n");

    printf("O maior valor digitado foi %d, na linha %d, na coluna %d", maior, PosI, PosJ);


    return 0;

}

Ex 4: #include <stdio.h> 
/*
Leia uma matriz 5 × 5. Leia também um valor X. O programa deverá fazer uma busca desse 
valor na matriz e, ao final, escrever a localização (linha e coluna) ou uma mensagem de “não
encontrado”
*/



int main () {
    int matriz[4][4], valX, i, j, linha, coluna;

    for (i=0; i<4; i++) {
        for (j=0; j<4; j++) {
            printf ("Apresente os valores de uma matriz 5 x 5. MATRIZ [%d][%d]: ", i, j);
            scanf("%d", &matriz[i][j]);  
            
        }
        printf("\n");
    } 
    
    printf("\nApresente um valor X a ser procurado: "); 
    scanf("%d", &valX); 
    for (i=0;i<4;i++) {
        for (j=0;j<4;j++) {
            if (matriz[i][j]==valX) {
                linha=i;
                coluna=j; 
                printf ("\nEsse valor pode ser encontrado na linha %d na coluna %d", linha, coluna); break; 
            } else {
                printf("\nEsse valor nao pode ser encontrado."); break; 
            }
        }
    }

    return 0;

}

Ex 5: #include <stdio.h> 
/*
Gerar e imprimir uma matriz de tamanho 10 × 10, onde seus elementos são da forma:
A[i][j] = 2i + 7j - 2 se i < j;
A[i][j] = 3i
2
- 1 se i = j;
A[i][j] = 4i
3 – 5j
2 + 1 se i > j:
*/



int main () {
    int matriz[10][10], i, j;

    for (i=1; i<10; i++) {
        for (j=1; j<10; j++) {
            if (i < j) {
                matriz[i][j]= (2*i) + (7*j) - 2; 
            }
             else if (i > j) {
                matriz[i][j]= (4 * (i*i*i)) - (5*(i*i)); 
            }
             else if (i==j) {
                matriz[i][j]= (3*(i*i)) - 1;
            }
        }
    }

    printf ("Imprimindo a matriz.\n"); 
    for (i=1; i<10;i++) {
        for (j=1;j<10;j++) {
            printf("\n%d", matriz[i][j]);
        }
        printf("\n");
    }




    return 0;

}

Ex 6:EX 6: #include <stdio.h>
/*
Gere matriz 4 × 4 com valores no intervalo [1, 20]. Escreva um programa que transforme a
matriz gerada numa matriz triangular inferior, ou seja, atribuindo zero a todos os elementos
acima da diagonal principal. Imprima a matriz original e a matriz transformada.

*/ 

int main()
{
    
    int matriz[4][4], i, j, k, l;
    
    
    
    
    for (int i = 0; i < 4; i++)
    {
        for (int j = 0; j < 4; j++)
        {
            do
            {
                printf("Apresente o valor de uma matriz. MATRIZ [%d][%d]", i, j);
                scanf("%d", &matriz[i][j]);
            } while (matriz[i][j] < 0 && matriz[i][j] > 21);
        }
    }
    for ( k = 0; k < 4; k++)
    {
        for (l = 0; l < 4; l++)
        {
            printf("[%d] ", matriz[k][l]);
        }
        printf("\n");
    }

    printf("\n");


    for (int i = 0; i < 4; i++)
    {
        for (int j = 0; j < 4; j++)
        {
            if (j> i)
            {
                matriz[i][j] = 0;
            }
        }   
    }

    //printing the new matriz
    for (int k = 0; k < 4; k++)
    {
        for (int l = 0; l < 4; l++)
        {
            printf("[%d] ", matriz[k][l]);
        }
        printf("\n");
    }
    
    
    return 0; 
}

Ex 7: #include <stdio.h>
#include <stdlib.h>
#include <time.h>

/*
Faça um programa para gerar automaticamente números entre 0 e 99 de uma cartela de bingo. Sabendo que cada cartela deverá conter 
5 linhas de 5 números, gere estes dados de modo a não ter números repetidos dentro das cartelas. O programa deve exibir na tela a 
cartela gerada.
*/

int main(){
    int matriz[5][5] = {}, vet[25], num=0, val=0, val1=0, val2=0, val3=0, i, j;
    srand(time(NULL));
    
    for (val3 = 0; val3 < 25; val3++){
        do{
            vet[val3] = (rand() % 100);

            num= 0;

            for (int c1 = 0; c1 < val2; c1++){
                if (vet[val1] == vet[val2]){
                    num++;
                }
            }

        }
        while(num != 0);
        val2++;
    }
    
    for (i = 0; i < 5; i++){
        for (j = 0; j < 5; j++){
           matriz[i][j] = vet[val];
            val++;
        }
    }

    for (int i = 0; i < 5; i++){
        for (int j = 0; j < 5; j++){
            printf("%d", matriz[i][j]);
        }
        printf("\n");
    }


return 0;
}

Ex 8:  #include <stdio.h> 
/*
Faça um programa que leia duas matrizes 2 × 2 com valores reais. Ofereça ao usuário um 
menu de opções:
a) somar as duas matrizes
b) subtrair a primeira matriz da segunda
c) adicionar uma constante às duas matrizes
d) imprimir as matrizes
*/


int main () {
    int matriz[2][2], i, j, matriz2[2][2], opcao, VetorSoma[2][2], y, z; 

    
        for (i=0;i<2;i++) {
            for (j=0;j<2;j++) {
                printf("Apresente um numero para uma matriz. MATRIZ[%d][%d]: ", i, j);
                scanf("%d", &matriz[i][j]); 

            }
        }
        for (i=0;i<2;i++) {
            for (j=0;j<2;j++) {
                printf("Apresente um numero para uma segunda matriz. MATRIZ2 [%d] [%d]: ", i, j);
                scanf("%d", &matriz2[i][j]); 
            }
        }



    do {
    printf("\nEscolha uma das opcoes abaixo. \n(1): Soma de matrizes \n(2): Subtracao de matrizes \n(3): Adicionar uma constante \n(4): imprimir. \n (5) Sair. \n"); 
    scanf ("%d", &opcao); 
    
    switch (opcao) {
        case 1: 
            for (i=0; i<2; i++) {
                for (j=0; i<2; i++) {
                    VetorSoma[i][j]= matriz[i][j] + matriz2[i][j]; 
                }
            }
            
            //Imprimindo
            for(i=0; i<2; i++) {
                for (j=0; j<2; j++) {
                    printf("%d", VetorSoma[i][j]); 
                }
            } break; 
            
       case 2:
       for (i=0; i<2; i++) {
                for (j=0; i<2; i++) {
                    VetorSoma[i][j]= matriz[i][j] - matriz2[i][j]; 
                }
            }
            
            //Imprimindo
            for(i=0; i<2; i++) {
                for (j=0; j<2; j++) {
                    printf("%d", VetorSoma[i][j]); 
                }
            } break; 

        case 3: 
        int linha=0, coluna=0, num2=0; 
        
        printf("Apresente a linha que voce quer modificar: ");
        scanf("%d", &linha): 
        
           printf("Apresente a coluna que voce quer modificar: ");
            scanf("%d", &coluna);

            printf("Apresente um numero: ");
            scanf("%d", &num2);

            matriz[linha][coluna] = num2;
            
            matriz_2[linha][coluna] = num2;

            printf("\n");
        
        case 4: printf("Imprimindo a primeira matriz. \n"); 
        for (i=0; i<2; i++) {
            for (j=0; j<2; j++) {
                printf("\n%d", matriz[i][j]);
            }
            printf("\n"); 
        } printf ("\nImprimindo a segunda."); 
            for (p=0; p<2; p++) {
                for (o=0;o<2;o++) {
                    printf("\n%d", matriz2[i][j]); 
                }
            } break; 
        
        case 5: printf ("\nSaindo."); break; 
        default: break; 

    }


    } while (opcao<6);


    
   


    return 0;

}
