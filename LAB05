EX 1: #include <stdio.h>
//Crie uma função que recebe como parâmetro um número inteiro e devolve o seu dobro.

int dobro(int num) {
    return num * 2;
}
int main () {
    int num1, dob;
    printf ("Apresente um numero: ");
    scanf ("%d", &num1);
    dob=dobro(num1);
    printf ("O dobro desse numero eh: %d", dob); 

    return 0;
}

Ex 2: #include <stdio.h>
/*Faça uma função que receba a data atual (dia, mês e ano em inteiro) e exiba-a na tela no formato textual por extenso. Ex.: Data: 18/11/2022, Imprimir: 18 de novembro de 2022.*/

int data(int dia, int mes, int ano) {

        switch (mes) {
        case 1: printf("%d de Janeiro de %d", dia, ano);  break;
        case 2: printf ("%d de Fevereiro de %d", dia, ano); break;
        case 3: printf("%d de Março de %d", dia, ano); break;
        case 4: printf ("%d de Abril de %d", dia, ano); break;
        case 5: printf("%d de Maio de %d", dia, ano); break;
        case 6: printf("%d de Junho de %d", dia, ano); break;
        case 7: printf("%d de Julho de %d", dia, ano); break;
        case 8: printf("%d de Agosto de %d", dia, ano); break;
        case 9: printf ("%d de Setembro de %d", dia, ano); break;
        case 10: printf("%d de Outubro de %d", dia, ano); break;
        case 11: printf ("%d de Novembro de %d", dia, ano); break;
        case 12: printf ("%d de Dezembro de %d", dia, ano); break;
        default: printf("Invalido."); break;
        
    }
}
int main () {
    int dia_atual, mes_atual, ano_atual;
    printf ("Apresente uma data:");
    scanf("%d %d %d", &dia_atual, &mes_atual, &ano_atual);
    data(dia_atual,mes_atual,ano_atual); 

    return 0;
}

Ex 3: #include <stdio.h>
/* Faça uma função para verificar se um número é positivo ou negativo. Sendo que o valor de retorno será 1 se positivo, -1 se negativo e 0 se for igual a 0. */
int positivo(int pos) {
    return 1;
}
int negativo(int neg) {
    return -1; 
}
int zero(int ig) {
    return 0; 
}

int main() {
    int num;
    printf("Digite um numero: ");
    scanf ("%d",&num);
    if (num>0){
        num=positivo(num);  
        printf ("%d", num);
    }
    if (num<0) {
        num=negativo(num);
        printf("%d", num); 
    }
    if (num==0) {
        num=zero(num);
        printf("%d", num);
    }
    

    return 0;
}
Ex 4: #include <stdio.h>
#include <math.h>
/*Faça uma função para verificar se um número é um quadrado perfeito. Um quadrado 
perfeito é um número inteiro não negativo que pode ser expresso como o quadrado de 
outro número inteiro. Ex.: 1, 4, 9...


*/

int quadrado(int n1)
{
    int raiz;
    raiz= sqrt(n1);
    if (raiz * raiz== n1)
        printf("Esse numero e um quadrado perfeito.");
    else
        printf("Esse numero nao e um quadrado perfeito.");
}
int main()
{
    int num;

    printf("Apresente um numero para saber se ele e quadrado perfeito: ");
    scanf("%d", &num);

    quadrado(num);

    return 0;
}

Ex 5: #include <stdio.h>
#include <math.h>
/*Faça uma função e um programa de teste para o cálculo do volume de uma esfera. Sendo 
que o raio é passado por parâmetro.



*/

int volume(float ra)
{

    float volume;
    float pi = 3.141592;
    
    volume = (4 * pi * (ra * ra * ra))/3;
    return volume;
}


int main()
{
    int raio;

    printf("Apresente o raio de uma esfera ");
    scanf("%d", &raio);
    
    printf("O volume desse esfera eh: %d", volume(raio));

    return 0; 
}

Ex 6: #include <stdio.h>
#include <math.h>
/*Faça uma função que receba 3 números inteiros como parâmetro, representando horas,
// minutos e segundos, e os converta em segundos.



*/

conversao(int hor, int min, int seg)
{
    int val = 0; 
    val = hor * 3600;
    val= val + (min * 60);
    val = val + seg;
    
    return val;
}


int main()
{
    int hora, minuto, segundo;  
        
    printf("Apresente a hora, os minutos e os segundos: ");
    scanf("%d %d %d", &hora, &minuto, &segundo);
    

    
    printf("A conversao desses valores em segundos eh: %d", conversao(hora, minuto, segundo));
    
    return 0;
}

Ex 7: #include <stdio.h>
#include <math.h>
/*Faça uma função que receba uma temperatura em graus Celsius e retorne-a convertida em graus Fahrenheit. 
A fórmula de conversão é: 𝐹 = 𝐶 ∗ (9,0 / 5,0 ) + 32,0, sendo F a temperatura em Fahrenheit e C a temperatura em Celsius




*/

int Fahrenheit (int celsius) {
     return (celsius * (9.0 / 5.0) + 32.0); 
}

int main ()
{

    int cels;

    printf("Digite uma temperatura em celsius para conversao: ");
    scanf("%d", &cels);

    printf ("A temperatura em Fahrenheit sera de: %d", Fahrenheit (cels));

     return 0;
}

Ex 8: #include <stdio.h>
#include <math.h>
/*Sejam a e b os catetos de um triangulo, onde a hipotenusa é obtida pela equação:
hipotenusa = √𝑎
2 + 𝑏
2. Faça uma função que receba os valores de a e b e calcule o valor
da hipotenusa através da equação.

*/

float hipotenusa(float cata, float catb){
    float hipote;
    hipote = sqrt((cata * cata) + (catb * catb));
    return hipote;
}


int main (){
    float num, num2;
    printf("Digite dois numeros:\n");
    scanf("%f %f", &num, &num2);


    printf("A hipotenusa desse triangulo eh:%.2f\n", hipotenusa(num, num2));

    
return 0;
}   

Ex 9: #include <stdio.h>
/*Faça uma função que receba a altura e o raio de um cilindro circular e retorne o volume do
cilindro. O volume de um cilindro circular é calculado por meio da seguinte fórmula: 𝑉 =
 ∗ 𝑟𝑎𝑖𝑜2
∗ 𝑎𝑙𝑡𝑢𝑟𝑎, onde  = 3.141592

*/
int volume (float al, float ra) {
    float pi= 3.141592;
    float vol; 
    vol= pi * (ra*ra) * al;
    return vol;

}



int main () {
    float altura, raio; 
    printf ("Apresente a altura e o raio de um cilindro circular: \n");
    scanf ("%f %f", &altura, &raio); 
    printf("O volume de um cilindro circular e igual a: %d", volume(altura,raio)); 


    return 0;
}

Ex 10: #include <stdio.h>
/*Faça uma função que receba dois números e retorne qual deles é o maior


*/
int maior(int numero1, int numero2)
{
    if (numero1 > numero2)
        return 1;
        
    else if (numero1 < numero2)
        return 2;
    
    else if (numero1 == numero2)
        return 3;
}


int main()
{
    int chec, num, num2;
    
    printf("Apresente o primeiro e o segundo valor a serem analisados: ");
    scanf("%d %d", &num, &num2);
    
    
    
    chec = maior(num, num2);
    
    
    switch(chec)
    {
        case 1:
        printf("O primeiro numero e maior. %d > %d", num, num2);
        break;
        
        case 2:
        printf("O segundo numero e maior. %d > %d", num2, num);
        break;
        
        case 3:
        printf("Os numeros sao iguais. %d = %d", num, num2);
        break;
    }

    return 0;
}

Ex 11: #include <stdio.h>
/*Elabore uma função que receba três notas de um aluno como parâmetros e uma letra. Se a
letra for A, a função deverá calcular a média aritmética das notas do aluno; se for P, deverá
calcular a média ponderada, com pesos 5, 3 e 2.

*/
float media (int not, int not2, int not3, char let)
{
    if(let=='a') {
        return (not+not2+not3)/3;
    }
    else if(let=='p') {
        return ( (not*5) + (not2*3) + (not3*2) )/10;
    }
}


int main ()
{
    int not, not2, not3;
    float m;
    char let;

    printf("Digite as notas de um aluno: ");
    scanf("%d %d %d", &not, &not2, &not3);

    printf("\n- Digite a letra que correponde a nota desse aluno. \n(A):Media aritmetica \n(P)Media ponderada: ");
    scanf(" %c", &let);
                       
    m= media(not, not2, not3, let);

    
        if (let == 'a') {
            printf("A media aritimetica eh igual a: %.2f", media(not, not2, not3, let) );
        }
        else if(let == 'p') {
            printf("A media ponderada eh igual a: %.2f", media(not, not2, not3, let) );
        }

     return 0;
}

Ex 12: #include <stdio.h>
#include <math.h> 
/*Escreva uma função que receba um número inteiro maior do que zero e retorne a soma de
todos os seus algarismos. Por exemplo, ao número 251 corresponderá o valor 8 (2 + 5 + 1). 

*/
int soma(int alg){
    int numero, numero2 = 0;
    
    while (alg > 0){
        numero= alg % 10;
        alg = (alg - numero)/10;
        numero2 += numero;
    }

return numero2; 
}



int main (){
    int num, num2;
    printf("Digite um numero:\n");
    scanf("%d", &num);
    
    if (num == 0){
        printf("Esse numero e invalido. \n");
    }
    else{
    num2 = soma(num);

    printf("A soma dos digitos do algarismo e %d eh: %d\n", num ,num2);
    }

return 0;
}


Ex 13: #include <stdio.h>
#include <math.h> 
/*Faça uma função que receba dois valores numéricos e um símbolo. Este símbolo
representará a operação que se deseja efetuar com os números. Se o símbolo for ‘+’ deverá
ser realizada uma adição, se for ‘–‘ uma subtração, se for ‘*’ uma multiplicação e se for ‘/’
será efetuada uma divisão.

*/
int operacao (int val, int val2, char simb) {

    switch (simb)
    {
        case '+':
        return val+val2;
        break;

        case '-':
        return val-val2;
        break;

        case '*':
        return val*val2;
        break;

        case '/':
        return val/val2;
        break;
    }
}
        int main () {

int valor, valor2;
    char simbolo;

    printf("Digite o primeiro valor: ");
    scanf("%d", &valor);
    printf("Digite o segundo valor: ");
    scanf("%d", &valor2);

    printf("\nApresente um simbolo para realizar uma operacao.\n+  para adicao\n-  para subtracao\n*  para multiiplicacao\n/  para divisao\n=== ");
    scanf(" %c", &simbolo);

    printf("\n- O resultado da operacao eh: %d.\n", operacao(valor, valor2, simbolo));
    
    return 0;
}



Ex 14: #include <stdio.h>
/*Faça uma função que receba a distância em Km e a quantidade de litros de gasolina 
consumidos por um carro em um percurso, calcule o consumo em Km/l e escreva uma 
mensagem de acordo com a tabela abaixo:
CONSUMO (Km/l) MENSAGEM
menor que 8 Venda o carro!
entre 8 e 14 Econômico!
maior que 14 Super econômico!

*/

int  calculo(float dist, float consumo) { 
    float result; 
    result= dist/consumo;
    return result; 

} int main () {
    float kilo, quanti_litros; //distancia em km e a quantidade de litros
    printf ("Apresente a distancia em Km e a quantidade de litros de gasolina consumidos em um percurso: \n"); 
    scanf ("%f %f", &kilo, &quanti_litros); 
    calculo(kilo, quanti_litros); 

    if (calculo(kilo, quanti_litros)< 8) {
        printf ("Venda o carro!");
    } 
	
	if (calculo(kilo, quanti_litros)> 8 && calculo(kilo, quanti_litros) < 14) {
        printf("Economico!"); 
    } 
	
	if (calculo(kilo, quanti_litros)>14) {
        printf("Super economico!"); 
    }





    return 0;
}
EX 15: #include <stdio.h>
/*Crie um programa que receba três valores (obrigatoriamente maiores que zero),
representando as medidas dos três lados de um triângulo. Elabore funções para:
a) Determinar se eles lados formam um triângulo, sabendo que:
 O comprimento de cada lado de um triângulo é menor do que a soma dos outros
dois lados.
b) Determinar e mostrar o tipo de triângulo, caso as medidas formem um triângulo. Sendo
que:
 Chama-se equilátero o triângulo que tem três lados iguais;
 Denominam-se isósceles o triângulo que tem o comprimento de dois lados iguais;
 Recebe o nome de escaleno o triângulo que tem os três lados diferentes

*/


int triangulo(int a, int b, int c)
{
    if ((a < b + c) && (b < a + c) && (c < a + b))
        return 1;

    else
        return 0;
}

int tipotriang(int x, int y, int z)
{
    if (x== y && x == z && y == z)
        printf("Esse triangulo e equilatero");

    else if (x != y && x != z && y != z)
        printf("Esse triangulo e escaleno");
    
    else
        printf("Esse triangulo e isosceles");
}


int main()
{

    int lad1,lad2,lad3,result;
    
    
    printf("Apresente um lado de um triangulo: ");
    scanf("%d", &lad1);
    
    printf("\nApresente outro lado de um triangulo: ");
    scanf("%d", &lad2);
    
    printf("\nApresente o terceiro lado de um triangulo: ");
    scanf("%d", &lad3);
    
    
    result = triangulo(lad1, lad2, lad3);

   
    if (result == 1) {
        printf("\nO triangulo existe\n");
        tipotriang(lad1, lad2, lad3);
    }
    else if (result == 0) {
        printf("\nEsse triangulo nao existe\n");
    }    
    return 0;
}

Ex 16: #include <stdio.h>
/*Faça uma função chamada desenha_linha. Ele deve desenhar uma linha na tela usando uma
sequência de símbolos de igual (Ex.: ========). A função recebe por parâmetro quantos
sinais de igual serão mostrados
*/
#include <stdio.h>

void desenhalinha (int val){
    int i;
    for (i = 0; i < val; i++)
        printf("=");
    printf("\n");
}

int main(){
    int num;
    printf("Digite a quantidade de linhas que voce deseja na sequencia:\n");
    scanf("%d", &num);

    desenhalinha(num);


return 0;
}

Ex 17: #include <stdio.h>
/*Faça uma função que receba dois números inteiros positivos por parâmetro e retorne a
soma dos N números inteiros existentes entre eles
*/
#include <stdio.h>

int resultado(int num1, int num2)
{
    int i, soma=1, cont=1;

    if (num1 < num2){
        i = num1;

        while (num2> cont)
        {
            i++;
            soma = soma + i;                                                                           
            cont++;
        }     
    }

    if (num2 < num1)
    {
        i = num2;

        while (num1 > cont)
        {
            i++;
            soma = soma + i;                                                                           
            cont++;
        }     
    }

    return soma;
}

int main ()
{

    int val, val2; 
    printf ("Apresente o valor de dois numeros");
    scanf ("%d", &val, &val2); 

    printf("\nA soma dos numeros entre ambos eh de: %d", resultado (val, val2));



    return 0; 
}


Ex 18: #include <stdio.h>
/*Faça uma função que receba por parâmetro dois valores inteiros x e z. Calcule e retorne o 
resultado de x
z para o programa principal. Atenção não utilize nenhuma função pronta de 
exponenciação

*/

int  resultado(int x, int z) {  
    int pot=1; 
    int cont=0;
    for (cont=0; cont<z; cont++) {
        pot=pot*x;
    } return pot; 
}

int main () {
    int num, num2; //Valores a serem apresentados pelo usuario
    
    printf ("Apresente dois valores: \n");
    scanf ("%d %d", &num, &num2);
    printf ("O resultado do primeiro numero elevado ao segundo numero eh: %d", resultado(num, num2)); 

    return 0;
}

Ex 19: #include <stdio.h>
/*Faça uma função que receba um número inteiro positivo n e calcule o seu fatorial, n!.
*/

int fatorial (int num)
{
    
    int i, result=1; 

    for (i=2; i<=num; i++)
    {
        result= result*i; 
    }

    return result; 

}

int main ()
{

    int val;  
    printf ("Apresente um numero para calcular o seu fatorial: \n");
    scanf ("%d", &val); 

    printf("\nO fatorial dessse numero e: %d", fatorial (val));



    return 0; 
}

Ex 20: #include <stdio.h>
/*Escreva uma função para determinar a quantidade de números primos abaixo de N. 
*/

int primo (int num){
    int i= 2, num1= 0, num2 = 0, num3 = 0, val= 0;
    while (i <= num){
        for (num2 = 2; num2 < i; num2++){
            num1 = 0;                     
            num3 = i % num2;
            if (num3 == 0){
                num1++;
            break;
            }
        }
            if (num1== 1){
                printf("");
            }
            if (num1 == 0){
            printf("%d\n", i);
        val = val + i;
            }
            i++;
    }
return val;
}

int main ()
{

       int numero, numero2;
    printf("Digite um numero diferente de 0 e 1, e em seguida sera apresentado os numeros primos ate ele:\n");
    scanf("%d", &numero);

    if (numero== 0 || numero== 1){
        printf("INVALIDO\n");
    }

    numero2 = primo (numero);


    return 0; 
}

Ex 21: #include <stdio.h>
/*Crie uma função que receba como parâmetro um valor inteiro e gere como saída n linhas
// com pontos de exclamação, conforme o exemplo abaixo (para n = 5):
// !
// !!
// !!!
// !!!!
// !!!!!
*/
int piramide(int linha)
{
    int cont, exclamacao;
    for (cont = 1; cont <= linha; cont++)
    {
        
        for (exclamacao = 1; exclamacao <= cont; exclamacao++)
        {
            printf("!");
        }
        printf("\n");
    }
}

int main()
{
    int lin;

    printf("Enter the number of lines that will be create by the program: ");
    scanf("%d", &lin);

    piramide(lin);

return 0;


}

Ex 23:  #include <stdio.h>
/*Escreva uma função que gera um triângulo lateral de altura 2*n-1 e n largura. Por exemplo, 
// a saída para n = 4 seria:
// *
// **
// ***
// ****
// ***
// **
// *
*/

int triangulo(int altura)
{
    
    int contador = 0,
        simb,
        totlin,
        linha = 1;
    
    totlin = 2 * altura - 1;
 
    while (linha <= totlin) 
    {
        
        contador = linha <= altura ? contador + 1: contador - 1;
        
      
        for (simb = 1; simb <= contador; simb++)
        {
            printf("*");
        }

      
        printf("\n");

        linha++;
    }
}




 int main() {
    int alt;

    printf("Apresente a altura do triangulo que vai ser criado: ");
    scanf("%d", &alt);

    triangulo(alt);


    return 0; 
}

Ex 24:  
#include <stdio.h>
/*. Escreva uma função que gera um triângulo de altura e lados n e base 2*n-1. Por exemplo, a
saída para n = 6 seria:
 *
 ***
 *****
 *******
 *********
***********
*/
int loop (int val){
    int cont, num, num2;
    for (cont = 1; cont <= val; cont++){
        for (num= 1; num <= (cont * 2 - 1); num++){
            for (num2 = cont; num2 < val; num2++){
                if (num == 1){
                    printf(" ");
                }
            }
            printf("*");
        }
        printf("\n");
    }
}

int main (){
    int valor;
    scanf("%d", &valor);
    loop(valor);


return 0;
}
